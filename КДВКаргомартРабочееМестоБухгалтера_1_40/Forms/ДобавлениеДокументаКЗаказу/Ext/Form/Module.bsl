
&НаКлиенте
Процедура ДобавитьСканДокумента(Команда)
	ФайлНачалоВыбора();
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбора()
    
    ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    
    ДиалогВыбораФайла.Заголовок = "Выберите файл скана документа";
	ДиалогВыбораФайла.Фильтр = "Изображение|*.jpg;*.png;*.bmp|Документ PDF(*.pdf)|*.pdf";
	
    Оповещение = Новый ОписаниеОповещения("ФайлНачалоВыбораЗавершение", ЭтаФорма);
	
	ДиалогВыбораФайла.Показать(Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
        Возврат;
    КонецЕсли;
	
	ФайлСкан = Новый Файл(Результат[0]);
	
	Если НЕ (ФайлСкан.Существует() И ФайлСкан.ЭтоФайл()) Тогда
		
		Сообщить("Ошибка чтения выбранного файла.");
		Возврат;
		
	КонецЕсли;
	
	
	НоваяСтрокаСкан 			= СканыДокумента.Добавить();
	НоваяСтрокаСкан.ТелоФайла 	= ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(Результат[0]), ЭтаФорма.УникальныйИдентификатор);
	НоваяСтрокаСкан.Расширение 	= СтрЗаменить(ФайлСкан.Расширение, ".", "");
	НоваяСтрокаСкан.ИмяФайла 	= ФайлСкан.ИмяБезРасширения;
    
КонецПроцедуры

&НаКлиенте
Процедура КОК(Команда)
	
	ДополнительныеПараметры = Новый Соответствие;
	
	Если СканыДокумента.Количество() = 0 Тогда
		
		ОП = Новый ОписаниеОповещения("КОК_Завершение", ЭтаФорма, ДополнительныеПараметры);
		ПоказатьВопрос(ОП, "Вы не прикрепили ни одного скана документа." + Символы.ПС + "Продолжить?", РежимДиалогаВопрос.ДаНет, 10, "Нет", "Внимание", "Нет");
		
	Иначе
		КОК_Завершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КОК_Завершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗаписи = ЗаписьДокументаВБД();
	
	Если РезультатЗаписи <> Ложь Тогда
		
		РезультатЗаписи.Вставить("ДокументПТУ", ДокументПТУ);
		ЭтаФорма.Закрыть(РезультатЗаписи);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ (ЗначениеЗаполнено(Параметры.НомерЗаказаКаргоМарт) И ЗначениеЗаполнено(Параметры.Организация) И ЗначениеЗаполнено(Параметры.ЗаказКаргоМарт)) Тогда
		
		//Ругань о незаполненных параметрах
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	Объект.Организация 		= Параметры.Организация;
	НомерЗаказаКаргоМарт 		= Параметры.НомерЗаказаКаргоМарт;
	ЗаказКаргоМарт 			= Параметры.ЗаказКаргоМарт;
	
	ДокументПТУ 			= Параметры.ДокументПТУ;
	ИДДокумента 			= Строка(Новый УникальныйИдентификатор);

	
	
КонецПроцедуры

&НаСервере
Функция ЗаписьДокументаВБД()
	
	МЗап = РегистрыСведений.КДВКаргомартПроверкаДокументовПоЗаказу.СоздатьМенеджерЗаписи();
	МЗап.ВидДокумента 						= ВидДокумента;
	МЗап.ДатаДокумента 						= ДатаДокумента;
	МЗап.НомерДокумента 					= НомерДокумента;
	мЗап.ДатаПроверки 						= ТекущаяДата();
	МЗап.ЗаказКаргомарт 					= ЗаказКаргомарт;
	МЗап.ИдентификаторПервичногоДокумента 	= ИДДокумента;
	МЗап.РезультатПроверки 					= Перечисления.КДВКаргомартРезультатПроверкиДокументов.НеПроверен;
	
	
	Запрос 			= Новый Запрос;
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	КДВКаргомартПроверкаЗаказовСрезПоследних.РезультатПроверки КАК РезультатПроверки
	|ИЗ
	|	РегистрСведений.КДВКаргомартПроверкаЗаказов.СрезПоследних(, ЗаказКаргомарт = &ЗаказКаргомарт) КАК КДВКаргомартПроверкаЗаказовСрезПоследних";
	Запрос.УстановитьПараметр("ЗаказКаргомарт", ЗаказКаргомарт);
	Выборка = Запрос.Выполнить().Выбрать();
	
	МЗапПроверкаЗаказов = Неопределено;
	
	Если НЕ Выборка.Следующий() ИЛИ (Выборка.РезультатПроверки <> Перечисления.КДВКаргомартРезультатПроверкиДокументов.НеПроверен
			И Выборка.РезультатПроверки <> Перечисления.КДВКаргомартРезультатПроверкиДокументов.ОригиналПроверен)Тогда
			
		МЗапПроверкаЗаказов = РегистрыСведений.КДВКаргомартПроверкаЗаказов.СоздатьМенеджерЗаписи();
		МЗапПроверкаЗаказов.ЗаказКаргомарт 		= ЗаказКаргомарт;
		МЗапПроверкаЗаказов.Контроллер 			= ПараметрыСеанса.ТекущийПользователь;
		МЗапПроверкаЗаказов.Период 				= ТекущаяДата();
		МЗапПроверкаЗаказов.РезультатПроверки 	= Перечисления.КДВКаргомартРезультатПроверкиДокументов.НеПроверен;
		
	КонецЕсли;
	
	
	Попытка
		
		НачатьТранзакцию();
		
		Если Не ЗначениеЗаполнено(ДокументПТУ) Тогда
			РезультатСозданияПТУ = КДВКаргомартСервер.СоздатьПоступлениеОтПеревозчикаПоЗаказуКаргомарт(Объект.Организация, ЗаказКаргоМарт, ?(ЗначениеЗаполнено(ДатаДокумента), ДатаДокумента, ТекущаяДата()), Ложь);
			
			Если РезультатСозданияПТУ.КодОшибки = 0 Тогда
				ДокументПТУ = РезультатСозданияПТУ.ДокПТУ;
			Иначе
				
				Сообщить(РезультатСозданияПТУ.Лог);
				ОтменитьТранзакцию();
				Возврат Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
		
		МЗап.Записать(Истина);
		
		Для Каждого СканДокумента из СканыДокумента Цикл
			
			ПараметрыФайла = РаботаСФайламиСлужебныйКлиентСервер.ПараметрыДобавленияФайла("Описание");
			ПараметрыФайла.ВладелецФайлов 		= ДокументПТУ;
			ПараметрыФайла.ИмяБезРасширения 	= СканДокумента.ИмяФайла;
			ПараметрыФайла.РасширениеБезТочки 	= СканДокумента.Расширение;
			ПараметрыФайла.Описание 			= ИДДокумента;
			
			СтруктураОтложенногоДобавленияФайла = Новый Структура;
			СтруктураОтложенногоДобавленияФайла.Вставить("ПараметрыФайла", ПараметрыФайла);
			СтруктураОтложенногоДобавленияФайла.Вставить("ХранилищеФайла", СканДокумента.ТелоФайла);
			СтруктураОтложенногоДобавленияФайла.Вставить("ФайлСсылка", РаботаСФайламиСлужебныйВызовСервера.ДобавитьФайл(СтруктураОтложенногоДобавленияФайла.ПараметрыФайла, СтруктураОтложенногоДобавленияФайла.ХранилищеФайла));
			
		КонецЦикла;
		
		Если МЗапПроверкаЗаказов <> Неопределено Тогда
			МЗапПроверкаЗаказов.Записать(Истина);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		Возврат Ложь;
		
	КонецПопытки;
	
	РезультатЗаписи = Новый Структура;
	РезультатЗаписи.Вставить("ВидДокумента", 				МЗап.ВидДокумента);
	РезультатЗаписи.Вставить("НомерДокумента", 				МЗап.НомерДокумента);
	РезультатЗаписи.Вставить("ДатаДокумента", 				МЗап.ДатаДокумента);
	РезультатЗаписи.Вставить("РезультатПроверкиКартинка", 	0);
	РезультатЗаписи.Вставить("ИдентификаторДокумента", 		МЗап.ИдентификаторПервичногоДокумента);
	РезультатЗаписи.Вставить("Комментарий", 				"");
	
	Возврат РезультатЗаписи;
	
КонецФункции



&НаКлиенте
Процедура КОтмена(Команда)
	ЭтаФорма.Закрыть(Ложь);
КонецПроцедуры

